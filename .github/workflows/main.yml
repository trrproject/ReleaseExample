name: CI/CD

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
  workflow_dispatch: 
      
jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: 5.x
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.10.2
        id: gitversion # step id used as reference for output values
      - name: Display GitVersion outputs
        run: |
          echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore packages
        run: dotnet restore calculator-nuget-demo/calculator-nuget-demo.csproj

      - name: Build package
        run: dotnet build calculator-nuget-demo/calculator-nuget-demo.csproj -c Release --no-restore

      - name: Pack package
        run: dotnet pack calculator-nuget-demo/calculator-nuget-demo.csproj -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: nugetPackage
          path: calculator-nuget-demo/bin/Release/*.nupkg

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: build 
    steps:
      #Push NuGet package to GitHub packages
      - name: Download nuget package artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: nugetPackage         

      - name: Main
        run: |
          ls -ls

      - name: Prep packages
        run: dotnet nuget add source --username trrproject --password ${{ secrets.NUGET_PACKAGE_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/trrproject/index.json"
      - name: Push package to GitHub packages 
        run: dotnet nuget push nugetPackage/*.nupkg --api-key ${{ secrets.NUGET_PACKAGE_TOKEN }}  --source "github"
    
    #Create release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} 
        with:
          tag_name: ${{ needs.build.outputs.Version }}
          release_name: Release ${{ needs.build.outputs.Version }}
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.Version }}
          name: Release ${{ needs.build.outputs.Version }}
          artifacts: "nugetPackage/*"
          token: ${{ secrets.NUGET_PACKAGE_TOKEN }}
