name: CI/CD

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        description: Environment to deploy the packages
        required: true
        type: string
    outputs:
      new_tag:
        value: ${{ jobs.tag.outputs.new_tag}}
      new_version:
        value: ${{ jobs.tag.outputs.new_version }}
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check-out repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
 
  tag:
    name: Update and push tag
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.tag }}
      new_version: ${{ steps.tag.outputs.version }}
    needs: [build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get default bump
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          if [[ "$branch_name" == Test* || "$branch_name" == staging || "$branch_name" == "release/*" ]]; then
              default_bump='prerelease'
          elif [[ "$branch_name" == "live" ]]; then
              default_bump='minor'
          else
              default_bump='patch'
          fi
          echo "default_bump=$default_bump" >> $GITHUB_ENV

      - name: Check is dry run
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          if [[ "$branch_name" == feature* || "$branch_name" == master ]]; then
              is_dry_run=true
          else
              is_dry_run=false
          fi
          echo "is_dry_run=$is_dry_run" >> $GITHUB_ENV

      - name: Update and push tag
        uses: trrproject/GHA-CreateTag-Python@master
        id: tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.default_bump }}
          tag_suffix: ${{ github.ref_name == 'live' && 'live' || '' }}
          fetch_all_tags: true
          is_dry_run: ${{ env.is_dry_run }}
